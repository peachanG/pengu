name: Upload Python Package

on:
  release:
    types: [created]

jobs:
  publish_test_pypi:
    runs-on: ubuntu-16.04
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.7'
    - name: Get the version
      id: get_version
      run: echo ::set-output name=VERSION::${GITHUB_REF#refs/tags/}
    - name: Check version
      run: |
        PACKAGE_VERSION=$$(cat pyproject.toml| grep "^version =" | tr -d "version = \""); \
        echo "v${PACKAGE_VERSION}" && \
        echo "${VERSION}" && \
        test "v${PACKAGE_VERSION}" = "${VERSION}"
      env:
        VERSION: ${{ steps.get_version.outputs.VERSION }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py | python
    - name: Publish testpypi
      run: |
        poetry config repositories.testpypi https://test.pypi.org/legacy/
        poetry config pypi-token.testpypi ${{ secrets.TESTPYPI_API_TOKEN }}
        poetry publish -r testpypi --build
  test_tetstpypi_37:
    runs-on: ubuntu-16.04
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.7'
    - name: install dependecies
      run: |
        python -m pip install --upgrade pip
        pip install -i https://test.pypi.org/simple/ pengu
        pip install pytest
        rm -r pengu
    - name: Test with pytest
      run: |
        pytest

  test_tetstpypi_38:
    runs-on: ubuntu-16.04
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.8'
    - name: install dependecies
      run: |
        python -m pip install --upgrade pip
        pip install -i https://test.pypi.org/simple/ pengu
        pip install pytest
        rm -r pengu
    - name: Test with pytest
      run: |
        pytest
